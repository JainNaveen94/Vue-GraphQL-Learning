#-- Type Definations of Type of Data we want from GraphQL --#

# User Type
type User {
  _id: ID
  username: String! @unique
  email: String!
  password: String!
  avatar: String
  joinDate: String
  favorites: [Post]
}

# Post Type
type Post {
  _id: ID
  title: String!
  imageUrl: String!
  categories: [String]!
  description: String!
  createdDate: String
  likes: Int
  createdBy: User!
  messages: [Message]
}

# Message Type
type Message {
  _id: ID
  messageBody: String!
  messageDate: String
  messageUser: User!
}

# User Session Token
type Token {
  token: String!
}

#-- Queries Type Defination which is to be Executed to fetch the Data (Initilization is there in Resolvers) --#
type Query {
  # Get the Single User
  getUser: User
  # Get the List of User
  getUsers: [User]
  # Get the Single Post
  getPost: Post
  # Get the List of Post
  getPosts: [Post]
}

#-- Mutations Type Defination which is to be Mutate or Create/Modified/Delete the Data (Initilization is there in Resolvers) --#
type Mutation {
  # Create User Mutation
  signUpUser(
    username: String!, 
    email: String!, 
    password: String!
  ): Token!
  # Login User Mutation
  signInUser(
    username: String!,
    password: String!,
  ): Token!
  # Create Post Mutation
  addPost(
    title: String!
    imageUrl: String!
    categories: [String]!
    description: String!
    creatorId: ID!
  ): Post!
}
